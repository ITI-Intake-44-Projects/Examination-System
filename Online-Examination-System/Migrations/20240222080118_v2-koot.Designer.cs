// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Examination_System.Models;

#nullable disable

namespace Online_Examination_System.Migrations
{
    [DbContext(typeof(OnlineExaminatonSystemContext))]
    [Migration("20240222080118_v2-koot")]
    partial class v2koot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_Examination_System.Models.Branch", b =>
                {
                    b.Property<int>("B_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("B_ID"));

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("B_ID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Course", b =>
                {
                    b.Property<int>("Crs_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Crs_ID"));

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Crs_ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Course_Topics", b =>
                {
                    b.Property<int>("Crs_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("Topic_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(1);

                    b.HasKey("Crs_ID", "Topic_Name");

                    b.ToTable("Course_Topics");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Ins_Branch", b =>
                {
                    b.Property<int>("Ins_Id")
                        .HasColumnType("int");

                    b.Property<int>("B_Id")
                        .HasColumnType("int");

                    b.HasKey("Ins_Id", "B_Id");

                    b.HasIndex("B_Id");

                    b.ToTable("Ins_Branch");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Instructor", b =>
                {
                    b.Property<int>("Ins_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ins_ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Working_Hours")
                        .HasColumnType("int");

                    b.HasKey("Ins_ID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Instructor_Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("CourseId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Instructor_Course");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Instructor_Track", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("InstructorId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("Instructor_Track");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Track", b =>
                {
                    b.Property<int>("Trk_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Trk_ID"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SuperID")
                        .HasColumnType("int");

                    b.HasKey("Trk_ID");

                    b.HasIndex("SuperID");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Track_Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Track_CourseCourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Track_CourseTrackId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "TrackId");

                    b.HasIndex("TrackId");

                    b.HasIndex("Track_CourseCourseId", "Track_CourseTrackId");

                    b.ToTable("Track_Course");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Course_Topics", b =>
                {
                    b.HasOne("Online_Examination_System.Models.Course", "Course")
                        .WithMany("CourseTopics")
                        .HasForeignKey("Crs_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Ins_Branch", b =>
                {
                    b.HasOne("Online_Examination_System.Models.Branch", "Branch")
                        .WithMany("Ins_Branches")
                        .HasForeignKey("B_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_Examination_System.Models.Instructor", "Instructor")
                        .WithMany("Ins_Branches")
                        .HasForeignKey("Ins_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Instructor_Course", b =>
                {
                    b.HasOne("Online_Examination_System.Models.Course", "Course")
                        .WithMany("Instructor_Courses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_Examination_System.Models.Instructor", "Instructor")
                        .WithMany("Instructor_Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Instructor_Track", b =>
                {
                    b.HasOne("Online_Examination_System.Models.Instructor", "Instructor")
                        .WithMany("InstructorTracks")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Online_Examination_System.Models.Track", "Track")
                        .WithMany("InstructorTracks")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Track", b =>
                {
                    b.HasOne("Online_Examination_System.Models.Instructor", "TrackSupervisor")
                        .WithMany()
                        .HasForeignKey("SuperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackSupervisor");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Track_Course", b =>
                {
                    b.HasOne("Online_Examination_System.Models.Course", "Course")
                        .WithMany("TrackCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_Examination_System.Models.Track", "Track")
                        .WithMany("TrackCourses")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_Examination_System.Models.Track_Course", null)
                        .WithMany("TrackCourses")
                        .HasForeignKey("Track_CourseCourseId", "Track_CourseTrackId");

                    b.Navigation("Course");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Branch", b =>
                {
                    b.Navigation("Ins_Branches");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Course", b =>
                {
                    b.Navigation("CourseTopics");

                    b.Navigation("Instructor_Courses");

                    b.Navigation("TrackCourses");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Instructor", b =>
                {
                    b.Navigation("Ins_Branches");

                    b.Navigation("InstructorTracks");

                    b.Navigation("Instructor_Courses");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Track", b =>
                {
                    b.Navigation("InstructorTracks");

                    b.Navigation("TrackCourses");
                });

            modelBuilder.Entity("Online_Examination_System.Models.Track_Course", b =>
                {
                    b.Navigation("TrackCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
